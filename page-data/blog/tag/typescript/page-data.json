{"componentChunkName":"component---src-templates-tag-template-tag-template-tsx","path":"/blog/tag/typescript","result":{"data":{"site":{"siteMetadata":{"title":"Adrian Pietrzak","subtitle":"Adrian Pietrzak is a software engineer from Poland. Over 7 years of professional experience in creating apps."}},"allMarkdownRemark":{"edges":[{"node":{"timeToRead":21,"fields":{"slug":"/posts/2022-02-13---NestJS-Authentication-Series-User-Registration//blog/nestjs-authentication-series/user-registration","categorySlug":"/blog/category/software-engineering/","tagSlugs":["/blog/tag/typescript/","/blog/tag/nodejs/","/blog/tag/nestjs/"]},"frontmatter":{"title":"NestJS Authentication Series üîê: Part 1 - User registration","date":"2022-02-13T22:40:32.169Z","tags":["TypeScript","NodeJS","NestJS"],"category":"Software Engineering","description":"Welcome you to my blog series on user authentication in the NestJS framework. This series is a set of several tutorials that extend the official documentation. If you are programming an enterprise application, you will most likely want to include full user support, i.e. email account confirmation, password reminder capability, etc. This post is the first part in a series and below you can find a list of all the other articles on this topic.","slug":"/blog/nestjs-authentication-series/user-registration"}}},{"node":{"timeToRead":11,"fields":{"slug":"/posts/2021-12-01---How-to-create-a-microservice-that-handles-the-queue-of-sending-emails-in-nestjs//blog/how-to-create-a-microservice-that-handles-the-queue-of-sending-emails-in-nestjs","categorySlug":"/blog/category/software-engineering/","tagSlugs":["/blog/tag/nodejs/","/blog/tag/typescript/","/blog/tag/nestjs/"]},"frontmatter":{"title":"How to create a microservice that handles üé¢ the queue of sending emails in NestJS","date":"2021-12-01T12:40:32.169Z","tags":["NodeJS","TypeScript","NestJS"],"category":"Software Engineering","description":"In this article, I will present you independent microservice that handles the queue of sending emails using the Node.js platform with the NestJS framework. The use of this microservice allows you to decouple the business logic of the email senders from the main monolithic application, resulting in less use of server resources and therefore faster source code execution.","slug":"/blog/how-to-create-a-microservice-that-handles-the-queue-of-sending-emails-in-nestjs"}}},{"node":{"timeToRead":3,"fields":{"slug":"/posts/2021-11-23---How-did-my-open-source-project-get-over-1k-stars-on-github//blog/how-did-my-open-source-project-get-over-1k-stars-on-github","categorySlug":"/blog/category/open-source/","tagSlugs":["/blog/tag/nodejs/","/blog/tag/typescript/","/blog/tag/react/"]},"frontmatter":{"title":"‚≠êÔ∏è How did my open source project get over 1k stars on¬†GitHub?","date":"2021-11-23T12:40:32.169Z","tags":["NodeJS","TypeScript","React"],"category":"Open Source","description":"In 2019, I started working on my first larger software application than \"todo list\". I was looking for a job as a software developer this year and I needed to distinguish myself from other developers. I made a banking system where you could make transfers (not real money). I've been looking for help from other developers to find out if my JavaScript code is good enough. By coincidence, my application has become one of the most popular open source projects and has received over 1.2k stars up to date.","slug":"/blog/how-did-my-open-source-project-get-over-1k-stars-on-github"}}},{"node":{"timeToRead":2,"fields":{"slug":"/posts/2021-11-01---Self-reference-mode-in-react-native-using-mobx-state-tree//blog/self-reference-mode-in-react-native-using-mobx-state-tree","categorySlug":"/blog/category/mobile-development/","tagSlugs":["/blog/tag/typescript/","/blog/tag/react-native/"]},"frontmatter":{"title":"Self reference model in React Native using MobX-state-tree","date":"2021-11-01T22:40:32.169Z","tags":["TypeScript","React Native"],"category":"Mobile Development","description":"While I was programming my mobile application in React Native, using the Ignite stack (i.e. TypeScript and MobX-state-tree), I ran into a specific problem. My api response returns a list of categories and their subcategories, it looks like this...","slug":"/blog/self-reference-mode-in-react-native-using-mobx-state-tree"}}}]}},"pageContext":{"group":"TypeScript","limit":4,"offset":0,"pagination":{"currentPage":0,"prevPagePath":"/blog/tag/typescript","nextPagePath":"/blog/tag/typescript/page/1","hasNextPage":true,"hasPrevPage":false}}},"staticQueryHashes":["251939775","2764776372","401334301","63107425"]}